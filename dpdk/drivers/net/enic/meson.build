# SPDX-License-Identifier: BSD-3-Clause
# Copyright(c) 2018 Cisco Systems, Inc.

sources = files(
	'base/vnic_cq.c',
	'base/vnic_dev.c',
	'base/vnic_intr.c',
	'base/vnic_rq.c',
	'base/vnic_rss.c',
	'base/vnic_wq.c',
	'enic_clsf.c',
	'enic_ethdev.c',
	'enic_flow.c',
	'enic_main.c',
	'enic_res.c',
	'enic_rxtx.c',
	)
deps += ['hash']
includes += include_directories('base')

# The current implementation assumes 64-bit pointers
if dpdk_conf.has('RTE_MACHINE_CPUFLAG_AVX2') and dpdk_conf.get('RTE_ARCH_64')
	sources += files('enic_rxtx_vec_avx2.c')
# Build the avx2 handler if the compiler supports it, even though 'machine'
# does not. This is to support users who build for the min supported machine
# and need to run the binary on newer CPUs too.
# This part is from i40e meson.build
elif cc.has_argument('-mavx2') and dpdk_conf.get('RTE_ARCH_64')
	enic_avx2_lib = static_library('enic_avx2_lib',
			'enic_rxtx_vec_avx2.c',
			dependencies: [static_rte_ethdev, static_rte_bus_pci],
			include_directories: includes,
			c_args: [cflags, '-mavx2'])
	objs += enic_avx2_lib.extract_objects('enic_rxtx_vec_avx2.c')
endif
